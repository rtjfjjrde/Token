{
  "base": {
    "color": {
      "fg-default": {
        "value": "{color.content.primary}",
        "type": "color"
      },
      "fg-weak": {
        "value": "{color.content.tertiary}",
        "type": "color"
      },
      "bg-clear": {
        "value": "{Global.White.white.0}",
        "type": "color"
      },
      "bg-light-gray": {
        "value": "{color.background.Surface.neutral}",
        "type": "color"
      },
      "bg-cloudy": {
        "value": "{color.content.disabled}",
        "type": "color"
      },
      "selectable": {
        "cloudy": {
          "canvas-bg": {
            "value": "{base.color.bg-clear}",
            "type": "color"
          },
          "canvas-border": {
            "value": "{base.color.selectable.cloudy.canvas-bg}",
            "type": "color",
            "$extensions": {
              "studio.tokens": {
                "modify": {
                  "type": "darken",
                  "value": "{base.color.modifiers.button.border-mix}",
                  "space": "hsl"
                }
              }
            }
          },
          "default": {
            "value": "{color.content.disabled}",
            "type": "color"
          }
        },
        "clear": {
          "canvas-bg": {
            "value": "{color.content.disabled}",
            "type": "color"
          },
          "canvas-border": {
            "value": "{base.color.selectable.clear.canvas-bg}",
            "type": "color",
            "$extensions": {
              "studio.tokens": {
                "modify": {
                  "type": "darken",
                  "value": "{base.color.modifiers.lightness-delta}",
                  "space": "lch"
                }
              }
            }
          },
          "default": {
            "value": "{base.color.bg-clear}",
            "type": "color"
          }
        },
        "primary": {
          "default": {
            "value": "{color.semantic.brand.0}",
            "type": "color",
            "description": "Only two colors needed when color modifiers are used on component level."
          },
          "inverted": {
            "value": "{Global.White.white.0}",
            "type": "color"
          }
        },
        "secondary": {
          "unselected": {
            "bg": {
              "value": "{color.noContextual.other.Emerald.Default}",
              "type": "color"
            },
            "border": {
              "value": "{base.color.selectable.secondary.unselected.bg}",
              "type": "color",
              "$extensions": {
                "studio.tokens": {
                  "modify": {
                    "type": "darken",
                    "value": "{base.color.modifiers.button.border-mix}",
                    "space": "lch"
                  }
                }
              }
            },
            "fg": {
              "value": "{base.color.bg-clear}",
              "type": "color"
            }
          },
          "selected": {
            "bg": {
              "value": "{base.color.selectable.secondary.unselected.bg}",
              "type": "color",
              "$extensions": {
                "studio.tokens": {
                  "modify": {
                    "type": "lighten",
                    "value": "{base.color.modifiers.button.hover-lightness}",
                    "space": "lch"
                  }
                }
              }
            },
            "border": {
              "value": "{base.color.selectable.secondary.selected.bg}",
              "type": "color",
              "$extensions": {
                "studio.tokens": {
                  "modify": {
                    "type": "lighten",
                    "value": "{base.color.modifiers.button.border-mix}",
                    "space": "lch"
                  }
                }
              }
            },
            "fg": {
              "value": "{base.color.bg-clear}",
              "type": "color"
            }
          }
        },
        "tertiary": {
          "unselected": {
            "enabled": {
              "bg": {
                "value": "{Global.White.white.0}",
                "type": "color",
                "description": "The old-school way without color modifiers on component level."
              },
              "border": {
                "value": "{color.action.Primary.normal}",
                "type": "color"
              },
              "fg": {
                "value": "{color.action.Primary.normal}",
                "type": "color"
              }
            },
            "hover": {
              "bg": {
                "value": "{Global.White.white.0}",
                "type": "color"
              },
              "border": {
                "value": "{color.action.Primary.hover}",
                "type": "color"
              },
              "fg": {
                "value": "{color.action.Primary.hover}",
                "type": "color"
              }
            },
            "pressed": {
              "bg": {
                "value": "{Global.White.white.0}",
                "type": "color"
              },
              "border": {
                "value": "{color.action.Primary.active}",
                "type": "color"
              },
              "fg": {
                "value": "{color.action.Primary.active}",
                "type": "color"
              }
            }
          },
          "selected": {
            "enabled": {
              "bg": {
                "value": "{core.color.transparent}",
                "type": "color"
              },
              "border": {
                "value": "{core.color.electricsheep.60}",
                "type": "color"
              },
              "fg": {
                "value": "{core.color.electricsheep.60}",
                "type": "color"
              }
            },
            "hover": {
              "bg": {
                "value": "{core.color.transparent}",
                "type": "color"
              },
              "border": {
                "value": "{core.color.electricsheep.70}",
                "type": "color"
              },
              "fg": {
                "value": "{core.color.electricsheep.70}",
                "type": "color"
              }
            },
            "pressed": {
              "bg": {
                "value": "{core.color.transparent}",
                "type": "color"
              },
              "border": {
                "value": "{core.color.electricsheep.50}",
                "type": "color"
              },
              "fg": {
                "value": "{core.color.electricsheep.50}",
                "type": "color"
              }
            }
          }
        },
        "success": {
          "canvas-bg": {
            "value": "{base.color.selectable.success.normal}",
            "type": "color",
            "$extensions": {
              "studio.tokens": {
                "modify": {
                  "type": "alpha",
                  "value": "{base.color.modifiers.canvas-alpha}",
                  "space": "lch"
                }
              }
            }
          },
          "canvas-border": {
            "value": "{base.color.selectable.success.normal}",
            "type": "color"
          },
          "normal": {
            "value": "{color.action.Success.normal}",
            "type": "color"
          },
          "on-default": {
            "value": "{Global.White.white.0}",
            "type": "color"
          }
        },
        "error": {
          "canvas-bg": {
            "value": "{base.color.selectable.error.normal}",
            "type": "color",
            "$extensions": {
              "studio.tokens": {
                "modify": {
                  "type": "alpha",
                  "value": "{base.color.modifiers.canvas-alpha}",
                  "space": "lch"
                }
              }
            }
          },
          "canvas-border": {
            "value": "{base.color.selectable.error.normal}",
            "type": "color"
          },
          "normal": {
            "value": "{color.action.Destructive.normal}",
            "type": "color"
          },
          "on-default": {
            "value": "{Global.White.white.0}",
            "type": "color"
          }
        }
      },
      "modifiers": {
        "enabled-alpha": {
          "value": "1",
          "type": "other"
        },
        "disabled-alpha": {
          "value": "0.5",
          "type": "other"
        },
        "canvas-alpha": {
          "value": "0.3",
          "type": "other"
        },
        "mix-delta": {
          "value": "0.1",
          "type": "other"
        },
        "lightness-delta": {
          "value": "0.16",
          "type": "other"
        },
        "button": {
          "border-mix": {
            "value": "{base.color.modifiers.mix-delta}",
            "type": "other"
          },
          "focused-mix": {
            "value": "0.5",
            "type": "other"
          },
          "hover-lightness": {
            "value": "{base.color.modifiers.lightness-delta}",
            "type": "other"
          },
          "pressed-darkness": {
            "value": "{base.color.modifiers.lightness-delta}",
            "type": "other"
          }
        },
        "textfield": {
          "border-mix": {
            "value": "{base.color.modifiers.mix-delta}",
            "type": "other"
          },
          "focused-mix": {
            "value": "0.5",
            "type": "other"
          },
          "hover-lightness": {
            "value": "{base.color.modifiers.lightness-delta}",
            "type": "other"
          },
          "pressed-lightness": {
            "value": "{base.color.modifiers.lightness-delta}",
            "type": "other"
          }
        }
      },
      "content": {
        "primary": {
          "darker": {
            "value": "{color.content.brand}",
            "type": "color",
            "description": "Your primary and secondary brand colors are not necessarily your primary and secondary interaction colors, that's why I added those tokens.",
            "$extensions": {
              "studio.tokens": {
                "modify": {
                  "type": "darken",
                  "value": "{base.color.modifiers.lightness-delta} * 4",
                  "space": "lch"
                }
              }
            }
          },
          "default": {
            "value": "{color.content.brand}",
            "type": "color"
          },
          "lighter": {
            "value": "{color.content.brand}",
            "type": "color",
            "$extensions": {
              "studio.tokens": {
                "modify": {
                  "type": "lighten",
                  "value": "{base.color.modifiers.lightness-delta} * 4",
                  "space": "lch"
                }
              }
            }
          }
        },
        "secondary": {
          "darker": {
            "value": "{color.noContextual.other.Purple.Default}",
            "type": "color",
            "$extensions": {
              "studio.tokens": {
                "modify": {
                  "type": "darken",
                  "value": "{base.color.modifiers.lightness-delta} * 4",
                  "space": "lch"
                }
              }
            }
          },
          "default": {
            "value": "{color.noContextual.other.Purple.Default}",
            "type": "color"
          },
          "lighter": {
            "value": "{color.noContextual.other.Purple.Default}",
            "type": "color",
            "$extensions": {
              "studio.tokens": {
                "modify": {
                  "type": "lighten",
                  "value": "{base.color.modifiers.lightness-delta} * 4",
                  "space": "lch"
                }
              }
            }
          }
        }
      }
    },
    "font-family": {
      "title": {
        "value": "{Misans}",
        "type": "fontFamilies"
      },
      "body": {
        "value": "{Misans}",
        "type": "fontFamilies"
      },
      "interface": {
        "value": "{Misans}",
        "type": "fontFamilies"
      }
    },
    "font-weight": {
      "title": {
        "value": "700",
        "type": "fontWeights"
      },
      "body": {
        "value": "400",
        "type": "fontWeights"
      },
      "interface-default": {
        "value": "400",
        "type": "fontWeights"
      },
      "interface-strong": {
        "value": "600",
        "type": "fontWeights"
      }
    },
    "font-size": {
      "xs": {
        "value": "{core.fontSize.scaled.62}",
        "type": "fontSizes"
      },
      "s": {
        "value": "{core.fontSize.scaled.75}",
        "type": "fontSizes"
      },
      "sm": {
        "value": "{core.fontSize.scaled.87}",
        "type": "fontSizes"
      },
      "m": {
        "value": "{core.fontSize.scaled.100}",
        "type": "fontSizes",
        "description": "m is the size of body text which is typically the same size as h6."
      },
      "ml": {
        "value": "{core.fontSize.scaled.125}",
        "type": "fontSizes",
        "description": "ml is large body text which is typically the same size as h5."
      },
      "l": {
        "value": "{core.fontSize.scaled.150}",
        "type": "fontSizes"
      },
      "xl": {
        "value": "{core.fontSize.scaled.200}",
        "type": "fontSizes"
      },
      "xxl": {
        "value": "{core.fontSize.scaled.250}",
        "type": "fontSizes"
      },
      "xxxl": {
        "value": "{core.fontSize.scaled.300}",
        "type": "fontSizes",
        "description": "xxxl is your h1, but don't tell anyone, we want to speak in tokens not in HTML markup."
      }
    },
    "line-height": {
      "title": {
        "value": "{core.line-height.m}",
        "type": "lineHeights"
      },
      "body": {
        "value": "{core.line-height.l}",
        "type": "lineHeights"
      },
      "interface": {
        "value": "{core.line-height.s}",
        "type": "lineHeights"
      }
    },
    "paragraph": {
      "title": {
        "value": "{core.paragraph.zero}",
        "type": "paragraphSpacing"
      },
      "body": {
        "value": "{core.paragraph.m}",
        "type": "paragraphSpacing"
      },
      "interface": {
        "value": "{core.paragraph.s}",
        "type": "paragraphSpacing"
      }
    },
    "border-radius": {
      "scale": {
        "value": "1",
        "type": "borderRadius",
        "description": "I added a scale here to be able to change the roundness of all border-radiuses simultaneously. That can be a very nice mechanism for several other tokens."
      },
      "container": {
        "none": {
          "value": "{base.border-radius.scale} * {core.radius.0}",
          "type": "borderRadius"
        },
        "xs": {
          "value": "{base.border-radius.scale} * {core.radius.25}",
          "type": "borderRadius"
        },
        "s": {
          "value": "{base.border-radius.scale} * {core.radius.50}",
          "type": "borderRadius"
        },
        "m": {
          "value": "{base.border-radius.scale} * {core.radius.100}",
          "type": "borderRadius"
        },
        "l": {
          "value": "{base.border-radius.scale} * {core.radius.150}",
          "type": "borderRadius"
        },
        "Infinite": {
          "value": "{base.border-radius.scale} * {core.radius.Infinite}",
          "type": "borderRadius"
        }
      },
      "selectable": {
        "m": {
          "value": "{base.border-radius.scale} * {core.radius.25}",
          "type": "borderRadius"
        },
        "Infinite": {
          "value": "{base.border-radius.scale} * {core.radius.Infinite}",
          "type": "borderRadius"
        }
      }
    },
    "border-width": {
      "selectable": {
        "none": {
          "value": "{core.border-width.0}",
          "type": "borderWidth"
        },
        "m": {
          "value": "{core.border-width.20}",
          "type": "borderWidth"
        }
      }
    },
    "border": {
      "focus-spacing": {
        "value": {
          "color": "rgb(100,0,0,0.01)",
          "width": "{core.border-width.40}",
          "style": "Solid"
        },
        "type": "border"
      }
    }
  },
  "size": {
    "web": {
      "breakpoint": {
        "s": {
          "value": "576",
          "type": "sizing"
        },
        "m": {
          "value": "768",
          "type": "sizing"
        },
        "l": {
          "value": "1024",
          "type": "sizing"
        },
        "xl": {
          "value": "1200",
          "type": "sizing"
        },
        "xxl": {
          "value": "1400",
          "type": "sizing"
        }
      },
      "columns": {
        "s": {
          "value": "4",
          "type": "sizing"
        },
        "m": {
          "value": "8",
          "type": "sizing"
        },
        "l": {
          "value": "12",
          "type": "sizing"
        }
      }
    },
    "icon": {
      "s": {
        "value": "{core.dimension.100}",
        "type": "sizing"
      },
      "m": {
        "value": "{core.dimension.150}",
        "type": "sizing"
      },
      "l": {
        "value": "{core.dimension.250}",
        "type": "sizing"
      },
      "xl": {
        "value": "{core.dimension.500}",
        "type": "sizing"
      }
    },
    "selectable": {
      "xs": {
        "value": "{core.dimension.100}",
        "type": "sizing"
      },
      "s": {
        "value": "{core.dimension.200}",
        "type": "sizing"
      },
      "m": {
        "value": "{core.dimension.300}",
        "type": "sizing"
      },
      "l": {
        "value": "{core.dimension.400}",
        "type": "sizing"
      },
      "xl": {
        "value": "{core.dimension.500}",
        "type": "sizing"
      }
    }
  },
  "space": {
    "page": {
      "inset": {
        "none": {
          "value": "{core.dimension.0}",
          "type": "spacing",
          "description": "This is basically your page margin (in breakpoints-speak)."
        },
        "s": {
          "value": "{core.dimension.100}",
          "type": "spacing"
        },
        "m": {
          "value": "{core.dimension.150}",
          "type": "spacing"
        },
        "l": {
          "value": "{core.dimension.200}",
          "type": "spacing"
        },
        "xl": {
          "value": "{core.dimension.300}",
          "type": "spacing"
        }
      },
      "inside": {
        "none": {
          "value": "{core.dimension.0}",
          "type": "spacing",
          "description": "This is basically your page gutter (in breakpoints-speak)."
        },
        "xxs": {
          "value": "{core.dimension.25}",
          "type": "spacing"
        },
        "xs": {
          "value": "{core.dimension.50}",
          "type": "spacing"
        },
        "s": {
          "value": "{core.dimension.100}",
          "type": "spacing"
        },
        "m": {
          "value": "{core.dimension.200}",
          "type": "spacing"
        },
        "l": {
          "value": "{core.dimension.400}",
          "type": "spacing"
        },
        "xl": {
          "value": "{core.dimension.800}",
          "type": "spacing"
        },
        "xxl": {
          "value": "{core.dimension.1600}",
          "type": "spacing"
        }
      }
    },
    "container": {
      "inset": {
        "none": {
          "value": "{core.dimension.0}",
          "type": "spacing"
        },
        "xs": {
          "value": "{core.dimension.50}",
          "type": "spacing"
        },
        "s": {
          "value": "{core.dimension.100}",
          "type": "spacing"
        },
        "m": {
          "value": "{core.dimension.150}",
          "type": "spacing"
        }
      },
      "inside": {
        "none": {
          "value": "{core.dimension.0}",
          "type": "spacing"
        },
        "xxs": {
          "value": "{core.dimension.12}",
          "type": "spacing"
        },
        "xs": {
          "value": "{core.dimension.25}",
          "type": "spacing"
        },
        "s": {
          "value": "{core.dimension.50}",
          "type": "spacing"
        },
        "m": {
          "value": "{core.dimension.100}",
          "type": "spacing"
        },
        "l": {
          "value": "{core.dimension.200}",
          "type": "spacing"
        }
      },
      "stack": {
        "s": {
          "value": "{core.dimension.100}",
          "type": "spacing"
        },
        "m": {
          "value": "{core.dimension.150}",
          "type": "spacing"
        }
      }
    },
    "selectable": {
      "inset": {
        "none": {
          "value": "{core.dimension.0}",
          "type": "spacing"
        },
        "s": {
          "value": "{core.dimension.50}",
          "type": "spacing"
        },
        "m": {
          "value": "{core.dimension.75}",
          "type": "spacing"
        },
        "l": {
          "value": "{core.dimension.100}",
          "type": "spacing"
        }
      },
      "inside": {
        "none": {
          "value": "{core.dimension.0}",
          "type": "spacing"
        },
        "xs": {
          "value": "{core.dimension.12}",
          "type": "spacing"
        },
        "s": {
          "value": "{core.dimension.25}",
          "type": "spacing"
        },
        "m": {
          "value": "{core.dimension.50}",
          "type": "spacing"
        },
        "l": {
          "value": "{core.dimension.100}",
          "type": "spacing"
        }
      },
      "stack": {
        "s": {
          "value": "{core.dimension.100}",
          "type": "spacing"
        },
        "m": {
          "value": "{core.dimension.150}",
          "type": "spacing"
        }
      }
    }
  },
  "core": {
    "box-shadow": {
      "intensity": {
        "value": "0.1",
        "type": "other"
      }
    }
  }
}